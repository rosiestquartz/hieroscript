[{"C:\\Users\\Reece McGowan\\hieroscript-new\\hieroscript\\src\\index.js":"1","C:\\Users\\Reece McGowan\\hieroscript-new\\hieroscript\\src\\App.js":"2","C:\\Users\\Reece McGowan\\hieroscript-new\\hieroscript\\src\\Header.js":"3","C:\\Users\\Reece McGowan\\hieroscript-new\\hieroscript\\src\\Console.js":"4","C:\\Users\\Reece McGowan\\hieroscript-new\\hieroscript\\src\\Editor.js":"5","C:\\Users\\Reece McGowan\\hieroscript-new\\hieroscript\\src\\Browser.js":"6"},{"size":146,"mtime":1607623947451,"results":"7","hashOfConfig":"8"},{"size":3600,"mtime":1608138164581,"results":"9","hashOfConfig":"8"},{"size":459,"mtime":1608129533674,"results":"10","hashOfConfig":"8"},{"size":2218,"mtime":1608129571128,"results":"11","hashOfConfig":"8"},{"size":1148,"mtime":1607617205003,"results":"12","hashOfConfig":"8"},{"size":2830,"mtime":1608129413460,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"zt6a14",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"16"},"C:\\Users\\Reece McGowan\\hieroscript-new\\hieroscript\\src\\index.js",[],["29","30"],"C:\\Users\\Reece McGowan\\hieroscript-new\\hieroscript\\src\\App.js",["31"],"C:\\Users\\Reece McGowan\\hieroscript-new\\hieroscript\\src\\Header.js",[],"C:\\Users\\Reece McGowan\\hieroscript-new\\hieroscript\\src\\Console.js",["32","33"],"import React, { useEffect, useRef } from 'react';\nimport './Console.scss';\n\nexport default function Console({ history, clearHistory }) {\n\n  //this is all commented out bc for some crazy reason react-dnd and animations\n  //are not friends. take up web dev they said, it'd be fun they said...\n  \n  // const scrollDiv = useRef(null);\n\n  // useEffect(\n  //   () => {\n  //     scrollToBottom();\n  //   },\n  //   [history]\n  // );\n\n  // const scrollToBottom = () => {\n  //   animateScroll(300);\n  // };\n\n  // // First, define a helper function.\n  // const animateScroll = duration => {\n  //   var start = scrollDiv.current.scrollTop;\n  //   var end = scrollDiv.current.scrollHeight;\n  //   var change = end - start;\n  //   var increment = 20;\n\n  //   function easeInOut(currentTime, start, change, duration) {\n  //     // by Robert Penner\n  //     currentTime /= duration / 2;\n  //     if (currentTime < 1) {\n  //       return (change / 2) * currentTime * currentTime + start;\n  //     }\n  //     currentTime -= 1;\n  //     return (-change / 2) * (currentTime * (currentTime - 2) - 1) + start;\n  //   }\n\n  //   function animate(elapsedTime) {\n  //     elapsedTime += increment;\n  //     var position = easeInOut(elapsedTime, start, change, duration);\n  //     scrollDiv.current.scrollTop = position;\n  //     if (elapsedTime < duration) {\n  //       setTimeout(function() {\n  //         animate(elapsedTime);\n  //       }, increment);\n  //     }\n  //   }\n\n  //   animate(0);\n  // };\n\n  return (\n    <div className=\"playground-console-container\">\n      <div className=\"playground-console\"> \n      {/* this div used to have ref={scrollDiv} to link with the animation stuff */}\n        <ul>\n          {history.map((item, index) => (\n            <li key={index} className=\"console-line\">\n              <span className=\"console-carrot\">></span>{' '}\n              <span className=\"console-text\">{item.text}</span>\n            </li>\n          ))}\n          <li>\n            <span className=\"console-carrot\">></span>\n          </li>\n        </ul>\n\n        <button\n          onClick={clearHistory}\n          className=\"button is-white is-outlined is-small\"\n        >\n          Clear\n        </button>\n      </div>\n    </div>\n  );\n}\n","C:\\Users\\Reece McGowan\\hieroscript-new\\hieroscript\\src\\Editor.js",[],"C:\\Users\\Reece McGowan\\hieroscript-new\\hieroscript\\src\\Browser.js",["34","35"],"import React, { useEffect, useRef } from 'react';\n\n/*\n   builds the code iframe. Remember rosie, separate iframe.html doesn't work in React, \n   it crashed the browser!\n \n   scotchLog function sends data up to the parent through postMessage\n */\nconst buildIframeSrc = (html, css, js) => ` \n  <html>\n  <head>\n    <style>${css}</style>\n  </head>\n  <body>\n  ${html}\n\n  <script>\n    function scotchLog() {\n      let output = \"\", arg, i;\n      for (i = 0; i < arguments.length; i++) {\n        arg = arguments[i];\n        output += typeof arg === \"object\" ? JSON.stringify(arg) : arg;\n      }\n      window.parent.postMessage(output, '*');\n      console.log(...arguments);\n    }\n\n    // -----------------------------------------\n\n    try {\n      ${js}\n    } catch (err) {\n      window.parent.postMessage(err.message, '*');\n      console.error(err.message);\n    }\n  </script>\n  </body>\n  </html>\n`;\n\n/**\n * The browser component has a nested iframe\n * Every time the js props change, destroy the iframe and create a new one\n */\nexport default function Browser({ sandboxId, html, css, js, addHistory }) {\n  const iframeContainer = useRef(null);\n   \n  /**\n   * event listener for postMessage coming from our iframe\n   */\n  useEffect(() => {\n    window.addEventListener('message', e => {\n      \n      if (!e.data) return false; // only handle if theres data\n      if (typeof e.data !== 'string') return false; // data must be a string\n      if (e.data.includes('_')) return false; // dont watch for events emitted by the react library\n      addHistory(e.data);\n    });\n  }, []);\n\n  /**\n   * Run the code, yay fun!\n   */\n  useEffect(() => execute(), [html, css, js]);\n\n  /**\n   * Run all our code in the iframe\n   * Destroys the iframe\n   * Rebuilds the iframe\n   */\n  const execute = () => {\n    // remove all children\n    while (iframeContainer.current.hasChildNodes()) {\n      iframeContainer.current.removeChild(iframeContainer.current.lastChild);\n    }\n\n    // create new iframe\n    let iframe = document.createElement('iframe');\n    iframe.height = '100%';\n    iframe.width = '100%';\n    iframe.sandbox = 'allow-scripts allow-same-origin';\n    iframe.style.border = 'none';\n    iframe.background = '#fff';\n\n    // convert all console.log to use scotchLog\n    // scotchLog will send events back up to this parent\n    // will add to code history\n    // scotchLog will also run console.log()\n   const newJs = js.replace(new RegExp('console.log', 'g'), 'scotchLog');\n   iframe.srcdoc = buildIframeSrc(html, css, newJs);\n   iframeContainer.current.appendChild(iframe);\n  };\n\n  const display = !html && !css ? 'none' : 'block';\n\n  return (\n    <div\n      ref={iframeContainer}\n      className=\"iframe-container\"\n      style={{\n        height: '100%',\n        width: '100%',\n        background: 'white',\n        display\n      }}\n    />\n  );\n}\n",{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":87,"column":13,"nodeType":"42","endLine":87,"endColumn":45},{"ruleId":"43","severity":1,"message":"44","line":1,"column":17,"nodeType":"45","messageId":"46","endLine":1,"endColumn":26},{"ruleId":"43","severity":1,"message":"47","line":1,"column":28,"nodeType":"45","messageId":"46","endLine":1,"endColumn":34},{"ruleId":"48","severity":1,"message":"49","line":59,"column":6,"nodeType":"50","endLine":59,"endColumn":8,"suggestions":"51"},{"ruleId":"48","severity":1,"message":"52","line":64,"column":30,"nodeType":"50","endLine":64,"endColumn":45,"suggestions":"53"},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'addHistory'. Either include it or remove the dependency array. If 'addHistory' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["56"],"React Hook useEffect has a missing dependency: 'execute'. Either include it or remove the dependency array.",["57"],"no-global-assign","no-unsafe-negation",{"desc":"58","fix":"59"},{"desc":"60","fix":"61"},"Update the dependencies array to be: [addHistory]",{"range":"62","text":"63"},"Update the dependencies array to be: [html, css, js, execute]",{"range":"64","text":"65"},[1563,1565],"[addHistory]",[1638,1653],"[html, css, js, execute]"]